// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ViniciusDJM/jusbrasil-teste/internal/interfaces (interfaces: TJALRepository)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	entities "github.com/ViniciusDJM/jusbrasil-teste/internal/entities"
	gomock "github.com/golang/mock/gomock"
)

// MockTJALRepository is a mock of TJALRepository interface.
type MockTJALRepository struct {
	ctrl     *gomock.Controller
	recorder *MockTJALRepositoryMockRecorder
}

// MockTJALRepositoryMockRecorder is the mock recorder for MockTJALRepository.
type MockTJALRepositoryMockRecorder struct {
	mock *MockTJALRepository
}

// NewMockTJALRepository creates a new mock instance.
func NewMockTJALRepository(ctrl *gomock.Controller) *MockTJALRepository {
	mock := &MockTJALRepository{ctrl: ctrl}
	mock.recorder = &MockTJALRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTJALRepository) EXPECT() *MockTJALRepositoryMockRecorder {
	return m.recorder
}

// FindFirstInstance mocks base method.
func (m *MockTJALRepository) FindFirstInstance() (entities.JudicialProcess, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindFirstInstance")
	ret0, _ := ret[0].(entities.JudicialProcess)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindFirstInstance indicates an expected call of FindFirstInstance.
func (mr *MockTJALRepositoryMockRecorder) FindFirstInstance() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindFirstInstance", reflect.TypeOf((*MockTJALRepository)(nil).FindFirstInstance))
}
