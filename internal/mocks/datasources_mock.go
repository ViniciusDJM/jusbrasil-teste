// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ViniciusDJM/jusbrasil-teste/internal/infra (interfaces: RequestDatasource)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	datasources "github.com/ViniciusDJM/jusbrasil-teste/internal/infra/datasources"
	gomock "github.com/golang/mock/gomock"
)

// MockRequestDatasource is a mock of RequestDatasource interface.
type MockRequestDatasource struct {
	ctrl     *gomock.Controller
	recorder *MockRequestDatasourceMockRecorder
}

// MockRequestDatasourceMockRecorder is the mock recorder for MockRequestDatasource.
type MockRequestDatasourceMockRecorder struct {
	mock *MockRequestDatasource
}

// NewMockRequestDatasource creates a new mock instance.
func NewMockRequestDatasource(ctrl *gomock.Controller) *MockRequestDatasource {
	mock := &MockRequestDatasource{ctrl: ctrl}
	mock.recorder = &MockRequestDatasourceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRequestDatasource) EXPECT() *MockRequestDatasourceMockRecorder {
	return m.recorder
}

// SearchFirstInstance mocks base method.
func (m *MockRequestDatasource) SearchFirstInstance(arg0 datasources.SearchFilter) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SearchFirstInstance", arg0)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SearchFirstInstance indicates an expected call of SearchFirstInstance.
func (mr *MockRequestDatasourceMockRecorder) SearchFirstInstance(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchFirstInstance", reflect.TypeOf((*MockRequestDatasource)(nil).SearchFirstInstance), arg0)
}

// SearchSecondInstance mocks base method.
func (m *MockRequestDatasource) SearchSecondInstance(arg0 datasources.SearchFilter) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SearchSecondInstance", arg0)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SearchSecondInstance indicates an expected call of SearchSecondInstance.
func (mr *MockRequestDatasourceMockRecorder) SearchSecondInstance(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchSecondInstance", reflect.TypeOf((*MockRequestDatasource)(nil).SearchSecondInstance), arg0)
}
